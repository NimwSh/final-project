<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        VKIgCIiA/9k=
</value>
  </data>
</root>